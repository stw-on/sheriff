version: '3'

volumes:
  db: {}
  redis: {}

services:
  reverse_proxy:
    image: traefik
    restart: on-failure
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  app:
    build:
      context: .
      dockerfile: ./development.dockerfile
    restart: on-failure
    env_file: .env
    volumes:
      - ./:/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`sheriff.localhost`) && PathPrefix(`/api`)
  worker:
    build:
      context: .
      dockerfile: development.dockerfile
    volumes:
      - ./:/app
    command: worker
    restart: on-failure
  scheduler:
    build:
      context: .
      dockerfile: development.dockerfile
    volumes:
      - ./:/app
    command: scheduler
    restart: on-failure
  ui:
    image: node:alpine
    volumes:
      - ./ui:/app/ui
    working_dir: /app/ui
    command: sh -c "yarn install && yarn serve --port 8080 --host 0.0.0.0"
    labels:
      - traefik.enable=true
      - traefik.http.routers.ui.rule=Host(`sheriff.localhost`)
      - traefik.http.services.ui.loadbalancer.server.port=8080
  db:
    image: postgres:14-alpine
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    restart: on-failure
  pdfrenderer:
    image: timoschwarzer/headless-pdf-renderer
    restart: on-failure
    cap_add:
      - SYS_ADMIN
